@using MonackFr.Mvc.Module
@{
    ViewBag.Title = "Default";
}

<h2>MonackFr</h2>
<div class="tiles">
        <ul>
            @*@foreach (Tile tile in ViewBag.Tiles)
            {                
                <li class="big blue">
                    <a href="@tile.Url">
                        <h1>@tile.Title</h1>
                        @if (tile.PreviewItems != null)
                        {
                            foreach (string previewItem in tile.PreviewItems)
                            {
                                <h2>@previewItem</h2>
                            }
                        }
                        <span>@tile.Copyright</span>
                    </a>
                </li>
            }*@
            @*<li class="fdd big">
                <a href="~/tasklist/task">
                    <h1>Liztos Tasks</h1>
                    <h2>Pay bills - today @@ 24:47</h2>
                    <h2>Watch T.V. - 21-2-2014 @@ 24:47</h2>
                    <span>Liztos by Monack</span>
                </a>
            </li>
            <li class="blue big">
                <a><h1>1</h1></a>
            </li>
            <li class="blue big"><a><h1>1</h1></a></li>
            <li class="blue big"><a><h1>2</h1></a></li>
            <li class="blue big"><a><h1>3</h1></a></li>
            <li class="blue big"><a><h1>4</h1></a></li>
            <li class="blue big"><a><h1>5</h1></a></li>
            <li class="blue big"><a><h1>6</h1></a></li>*@
        </ul>
    
</div>

@section Scripts {
    <script type="text/javascript">

        function Tile(data) {
            self.Title = ko.observable(data.Title);
            //self.PreviewItems = ko.observableArray(data.PreviewItems);
            self.Copyright = ko.observable();
            self.Url = ko.observable();
        }

        function TileViewModel() {
            var self = this;
            self.tiles = ko.observableArray();
            // Load initial state from server, convert it to Task instances, then populate self.tasks
            $.post('@Url.Action("GetTiles", "Tiles")', function (data) {
                var mappedTiles = $.map(data, function (item) { return new Tile(item) });
                self.tiles(mappedTiles);
                $("div.tiles").tiles(data);
            });
        }

        ko.applyBindings(new TileViewModel());
        

        @*$(document).ready(function () {
            $.ajax({
                datatype: 'json',
                type: 'post',
                url: '@Url.Action("GetTiles", "Tiles")',
                success: function(data) {
                    $("div.tiles").tiles(data);
                }
            });*@


            //$("div.tiles").tiles({ option1: "1" });
        //});
</script>
}



