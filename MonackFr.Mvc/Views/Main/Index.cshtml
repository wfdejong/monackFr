@using MonackFr.Mvc.ViewModels
@{
	ViewBag.Title = "Default";
}

<h2>MonackFr</h2>

<a href="javascript:void(0)" class="home-button">Home</a>

<div class="tiles">
	<ul>	
	</ul>
</div>

<ul class="modules">
	@foreach (Module module in ViewBag.Modules)
	{		
		<li class="module @module.CssSystemName">
			<h2>@module.Name</h2>
			<ul class="menu"></ul>
		</li>
	}
</ul>

@section Scripts {
	<script type="text/javascript">

		function monackfr() { }
		var monackfrInstance = new monackfr();


		$(document).ready(function () {
			LoadTiles();
			$(".home-button").bind("click", function () {
				$(".module").hide();
				$(".tiles").show();
			});			

			$(".module").hide();
			$(".tiles").show();

			$.post('@Url.Action("GetModules", "Module")', function (modules) {
				$.each(modules, getMenuItems)
			})
		});

		var createMenu = function (menuItem, module) {

			var menuItemLi = $("<li>")
					.addClass("menu-item")
					.attr("data-menu-systemname", menuItem.CssSystemName)
					.attr("data-panel-systemname", menuItem.Panel.CssSystemName)
					.attr("data-default", menuItem.Default)
					.append($("<a>")
						.attr("href", "javascript:void(0)")
						.text(menuItem.Label)
						.bind("click", function () {
							showPanel(menuItem.Panel.CssSystemName, menuItem.Panel.OnShow, menuItem.Panel.OnShowParam);
						})
					);

			if (menuItem.MenuItems !== null && menuItem.MenuItems.length > 0) {
				var subMenuItemUl = $("<ul>");

				$.each(menuItem.MenuItems, function (index, subMenuItem) {
					var subMenuItemLi = createMenu(subMenuItem, module);
					if (subMenuItem.Visible) {
						subMenuItemUl.append(subMenuItemLi);
					}
				});
				
				menuItemLi.append(subMenuItemUl);				
			}		

			createPanel(module, menuItem.Panel);

			return menuItemLi;
		}

		var createPanel = function (module, panel) {			
			$.get(panel.Url, function (content) {				
				$("." + module.CssSystemName).append(					
					$("<div>")
						.addClass("panel")
						.attr("data-panel-systemname", panel.CssSystemName)
						.attr("data-panel-onshow", panel.OnShow)
						.html(content)
				);
			});
		}

		var getMenuItems = function (index, module) {			
			$.post('@Url.Action("GetMenu", "Module")', { systemName: module.SystemName }, function (menuItems) {	
				$.each(menuItems, function (index, menuItem) {					
					var menuItemLi = createMenu(menuItem, module);					
					if (menuItem.Visible) {
						$("." + module.CssSystemName + " ul.menu").append(menuItemLi);
					}					
				});
			});
		};		

		var showModule = function (module) {
			$(".tiles").hide();
			$(".module").hide();
			$(".panel").hide();
			$("." + module.CssSystemName).show();

			var defaultMenuItem = $("." + module.CssSystemName + " ul.menu li.menu-item[data-default='true']").first().attr("data-panel-systemname");
			var onshow = $("." + module.CssSystemName + " ul.menu li.menu-item[data-default='true']").first().attr("data-panel-onshow");

			if ($.isEmptyObject(defaultMenuItem)) {
				defaultMenuItem = $("." + module.CssSystemName + " ul.menu li.menu-item").first().attr("data-panel-systemname");
				onshow = $("." + module.CssSystemName + " ul.menu li.menu-item").first().attr("data-panel-onshow");
			}
			showPanel(defaultMenuItem, onshow);
		};

		var showPanel = function (panelName, onshow, param) {
			console.log(panelName);
			$(".panel").hide();
			$(".panel[data-panel-systemname='" + panelName + "']").show();						
			if (onshow != undefined) {
				var callmethod = "monackfrInstance." + onshow + "(" + param + ")";
				console.log(callmethod);
				eval(callmethod);
			}
		};

		function LoadTiles() {
			$.post('@Url.Action("GetTiles", "Tile")', function (data) {				
				$("div.tiles").tiles(data, showModule);				
			});
		}
</script>
}




